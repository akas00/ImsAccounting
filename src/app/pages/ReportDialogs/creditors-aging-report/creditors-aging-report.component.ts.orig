import {NgaModule} from '../../../theme/nga.module';
import {Component, Inject, Output, EventEmitter, OnInit} from '@angular/core';
import {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';
import { Observable } from "rxjs/Observable";
import { MasterRepo } from '../../../common/repositories';
import { Division } from '../../../common/interfaces';
import { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';
import { ActivatedRoute, Router } from '@angular/router';


export interface DialogInfo{
    header: string;
    message: Observable<string>;

}
@Component({
    selector : 'result-creditros-aging-report-dialog',
    templateUrl : './creditors-aging-report.component.html',
    styleUrls: ["../../Reports/reportStyle.css","../../modal-style.css"]

})

export class CreditorsAgingReport implements OnInit{
    ReportParameters:any=<any>{};
    multipleReportFormateName:string;
    division: any[] = [];
    CostcenterList: any[] = [];
    instanceWiseRepName:string='Creditors Ageing Report';
    loadedTimes:number=0;

    @Output() reportdataEmit = new EventEmitter();
    constructor(private masterService: MasterRepo,
        public dialogref:MdDialogRef<CreditorsAgingReport>,
         @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute,
         private _reportFilterService:ReportMainService, private arouter: Router){
      //----------Default values on load


    //   this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];
    //   this.changeEndDate(this.ReportParameters.DATE2,'AD');


      this.multipleReportFormateName = 'Creditors Aging Report';
      this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID
    //   this.ReportParameters.CreditorsAgeing_CostCenter = "%";
      this.ReportParameters.D1 = "30";
      this.ReportParameters.D2 = "60";
      this.ReportParameters.D3 = "90";
      this.ReportParameters.D4 = "120";

    //   this.ReportParameters.CHK_AGEINGOFPARTYOPENING = 1;
    //   this.ReportParameters.CHK_SHOWAGEINGREPORT = 0;
    // this.ReportParameters.DIVISION=this.masterService.userProfile.CompanyInfo.INITIAL;
    this.ReportParameters.ISDEBTORS = 0;

    this.division = [];
        this.masterService.getAllDivisions()
            .subscribe(res => {
                this.division.push(<Division>res);
            }, error => {
                this.masterService.resolveError(error, "divisions - getDivisions");
            });

            this.masterService.getCostcenter().subscribe(res => {
                this.CostcenterList = res;
            })

    }

    ngOnInit(){
<<<<<<< HEAD
        if(this._reportFilterService.CreditorsAgeingObj.assignPrevioiusDate != true){
            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = new Date().toJSON().split('T')[0];
                this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, "AD");
              }
              else {
                
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = this.masterService.PhiscalObj.EndDate.split('T')[0];
=======
        this._ActivatedRoute.queryParams.subscribe(params => {
            if(this._reportFilterService.CreditorsAgeingObj.assignPrevioiusDate != true){
                if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.userProfile.CompanyInfo.PhiscalID) {
                    this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = new Date().toJSON().split('T')[0];
>>>>>>> f42d1741ee6983f3377c32e40aafcde90a290b9a
                    this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, "AD");
                  }
                  else {
    
                    this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = this.masterService.userProfile.CompanyInfo.FEDATE.split('T')[0];
                        this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, "AD");
    
    
                }
    
    
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter ='%';
            }
    
            if(params.instancename){
                // ////console.log("@@[Creditors Outs Report0]",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;
                this._reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DOAGEINGOFOPENINGBL;
                this._reportFilterService.CreditorsAgeingObj.GROUPBY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.GROUPBY;
                this.ReportParameters.ISDEBTORS=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ISDEBTORS;
                this._reportFilterService.CreditorsAgeingObj.REPORTMODE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTMODE;
                this._reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDPARTYDETAIL;
                this.ReportParameters.D1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D1;
                this.ReportParameters.D2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D2;
                this.ReportParameters.D3=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D3;
                this.ReportParameters.D4=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D4;
            }
        })
        

        this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, "AD");
        this._reportFilterService.CreditorsAgeingObj.loadedTimes =0;
    }

    onload(){
        this.DialogClosedResult("ok");
    }

    closeReportBox(){
        this.DialogClosedResult("Error!");
    }

    public DialogClosedResult(res) {
        this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV = (this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV == null || this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV == "")?"%":this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV;

        if(this._reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL == 1){
            this.multipleReportFormateName = 'Creditors Aging Report_1';
        }else{
            this.multipleReportFormateName = 'Creditors Aging Report';
        }

        if(res == "ok"){
        this._reportFilterService.CreditorsAgeingObj.assignPrevioiusDate = true;
        let routepaths = this.arouter.url.split('/');
        let activeurlpath2;
              if(routepaths&& routepaths.length){
                activeurlpath2=routepaths[routepaths.length-1]
                ////console.log("@@activeurlpath2",activeurlpath2)
              }
    //     let abc=this._reportFilterService.previouslyLoadedReportList.findIndex(report=>report.reportname == 'Creditors Ageing Report');
    //     if(abc>=0){
    //         this._reportFilterService.previouslyLoadedReportList.splice(abc,1)
    //    }
        this._reportFilterService.previouslyLoadedReportList.push(
            {reportname: 'Creditors Ageing Report'+'_'+this._reportFilterService.CreditorsAgeing_loadedTimes,
            activeurlpath: this.arouter.url,
            activerurlpath2: activeurlpath2,
            instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CreditorsAgeing_loadedTimes,
            loadedTimes:this.loadedTimes});
        }

        this.reportdataEmit.emit({ status: res, data: {reportname:this.multipleReportFormateName, 
            instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.CreditorsAgeing_loadedTimes, 
            reportparam:{
            DATE: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1,
            DIV: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV,
            PHISCALID: this.masterService.PhiscalObj.PhiscalID,
            COMID:this.ReportParameters.COMID,
            CreditorsAgeing_CostCenter: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter,
            SHOWDPARTYDETAIL: this._reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL,
            // OPNINGBLONLY: this._reportFilterService.CreditorsAgeingObj.OPNINGBLONLY,
            REPORTMODE:this._reportFilterService.CreditorsAgeingObj.REPORTMODE,
            GROUPBY:this._reportFilterService.CreditorsAgeingObj.GROUPBY?this._reportFilterService.CreditorsAgeingObj.GROUPBY:0,
            D1: this.ReportParameters.D1,
            D2: this.ReportParameters.D2,
            D3: this.ReportParameters.D3,
            D4: this.ReportParameters.D4,
            DOAGEINGOFOPENINGBL: this._reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL,
            ISDEBTORS: this.ReportParameters.ISDEBTORS,
            COSTCENTER: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter,
        } }});

        if(res == "ok"){
            this._reportFilterService.CreditorsAgeing_loadedTimes = this._reportFilterService.CreditorsAgeing_loadedTimes+1;
        }
    }

    changestartDate(value, format: string) {
            var adbs = require("ad-bs-converter");
            if (format == "AD") {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_BSDATE1 = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);
            }
            else if (format == "BS") {
                var bsDate = (value.replace("-", "/")).replace("-", "/");
                var adDate = adbs.bs2ad(bsDate);
                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = (adDate.year + '-' + ((adDate.month).toString().length == 1 ? '0' + adDate.month : adDate.month) + '-' + ((adDate.day).toString().length == 1 ? '0' + adDate.day : adDate.day));
            }
    }

    changeEndDate(value, format: string) {
        try{
            var adbs = require("ad-bs-converter");
            if (format == "AD") {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                this.ReportParameters.BSDATE2 = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);
            }
            else if (format == "BS") {
                var bsDate = (value.replace("-", "/")).replace("-", "/");
                var adDate = adbs.bs2ad(bsDate);
                this.ReportParameters.DATE2 = (adDate.year + '-' + ((adDate.month).toString().length == 1 ? '0' + adDate.month : adDate.month) + '-' + ((adDate.day).toString().length == 1 ? '0' + adDate.day : adDate.day));
            }
        }
          catch(e){}
    }
}

